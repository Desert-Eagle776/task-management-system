<<<<<<< HEAD
import {
  CanActivate,
  ExecutionContext,
  Injectable,
  UnauthorizedException,
} from '@nestjs/common';
import { JwtService } from '@nestjs/jwt';
import { AuthService } from './auth.service';
=======
import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from "@nestjs/common";
import { JwtService } from "@nestjs/jwt";
import { AuthService } from "./auth.service";
>>>>>>> 335b50b5c8006c86a7ae9c42d5a70c6e6b5e4eb5

@Injectable()
export class JwtAuthGuard implements CanActivate {
  constructor(
    private jwtService: JwtService,
    private authService: AuthService,
<<<<<<< HEAD
  ) {}
=======
  ) { }
>>>>>>> 335b50b5c8006c86a7ae9c42d5a70c6e6b5e4eb5

  async canActivate(context: ExecutionContext): Promise<boolean> {
    const req = context.switchToHttp().getRequest();
    try {
      const authHeader = req.headers.authorization;
      const bearer = authHeader.split(' ')[0];
      const token = authHeader.split(' ')[1];

      if (bearer !== 'Bearer' || !token) {
        return false;
      }

      await this.jwtService.verify(token);
      req.user = await this.authService.validateToken(token);

      return true;
    } catch (e) {
      throw new UnauthorizedException(e.message);
    }
  }
<<<<<<< HEAD
}
=======
}
>>>>>>> 335b50b5c8006c86a7ae9c42d5a70c6e6b5e4eb5
